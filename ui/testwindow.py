# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'windowDS.ui'
#
# Created by: PyQt5 UI code generator 5.15.4
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.


import os
import time

from PyQt5 import QtCore, QtGui, QtWidgets
from ui import xrayDetectionWidget, searchDataWidget, imagesDetectionWidget, userManageWidget
from ui.uiThreads import docxCreate
import MySQLdb
from ui import settingDialog
import threading


class Ui_mainWindow(QtCore.QObject):
    infoEmit = QtCore.pyqtSignal(str, str)
    def __init__(self, parent=None):
        super(Ui_mainWindow, self).__init__(parent)

    def setupUi(self, mainWindow):
        self.user = ""
        self.deep = True
        self.button_color = "1E90EE"
        self.style_color = 0
        mainWindow.setObjectName("mainWindow")
        mainWindow.setWindowModality(QtCore.Qt.NonModal)
        mainWindow.resize(1280, 720)
        icon = QtGui.QIcon()
        icon.addPixmap(QtGui.QPixmap("./source/icon/satall.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        mainWindow.setWindowIcon(icon)
        mainWindow.setStyleSheet("QMainWindow{background-color:#006699}")
        mainWindow.setDocumentMode(False)
        mainWindow.setTabShape(QtWidgets.QTabWidget.Rounded)
        mainWindow.setDockNestingEnabled(False)
        mainWindow.setUnifiedTitleAndToolBarOnMac(False)
        self.centralwidget = QtWidgets.QWidget(mainWindow)
        self.centralwidget.setStyleSheet("QWidget{background-color:transparent}")
        self.centralwidget.setObjectName("centralwidget")
        self.verticalLayout_main = QtWidgets.QVBoxLayout(self.centralwidget)
        self.verticalLayout_main.setObjectName("verticalLayout_main")
        self.horizontalLayout_1 = QtWidgets.QHBoxLayout()
        self.horizontalLayout_1.setObjectName("horizontalLayout_1")
        spacerItem0 = QtWidgets.QSpacerItem(40, 20, QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Minimum)
        self.horizontalLayout_1.addItem(spacerItem0)
        self.label_hello = QtWidgets.QLabel("欢迎您！")
        self.label_hello.setFont(QtGui.QFont("微软雅黑",10))
        self.label_hello.setStyleSheet("QLabel{color:rgb(255,255,255)}")
        self.horizontalLayout_1.addWidget(self.label_hello)
        self.horizontalLayout_2 = QtWidgets.QHBoxLayout()
        self.horizontalLayout_2.setObjectName("horizontalLayout_2")
        self.verticalLayout_main.addLayout(self.horizontalLayout_1)
        self.verticalLayout_main.addLayout(self.horizontalLayout_2)
        self.verticalLayout = QtWidgets.QVBoxLayout()
        self.verticalLayout.setObjectName("verticalLayout")
        self.pushButton = QtWidgets.QPushButton(self.centralwidget)
        self.pushButton.setMinimumSize(QtCore.QSize(100, 100))
        self.pushButton.setMaximumSize(QtCore.QSize(100, 100))
        self.pushButton.setStyleSheet("QPushButton{background-color:transparent}\n"
                                      "QPushButton{border:2px}\n"
                                      "QPushButton{border-radius:10px}\n"
                                      "QPushButton{padding:2px 2px 2px 2px}\n"
                                      "QPushButton{word-wrap: break-word}")
        self.pushButton.setText("")
        op = QtWidgets.QGraphicsOpacityEffect()
        op.setOpacity(0.8)
        self.pushButton.setGraphicsEffect(op)
        icon1 = QtGui.QIcon()
        icon1.addPixmap(QtGui.QPixmap("./source/icons/jiance.png"), QtGui.QIcon.Normal, QtGui.QIcon.On)
        self.pushButton.setIcon(icon1)
        self.pushButton.setIconSize(QtCore.QSize(100, 100))
        self.pushButton.setObjectName("pushButton")
        self.verticalLayout.addWidget(self.pushButton, 0, QtCore.Qt.AlignHCenter)
        self.pushButton_2 = QtWidgets.QPushButton(self.centralwidget)
        self.pushButton_2.setMinimumSize(QtCore.QSize(100, 100))
        self.pushButton_2.setMaximumSize(QtCore.QSize(100, 100))
        self.pushButton_2.setStyleSheet("QPushButton{background-color:transparent}\n"
                                        "QPushButton{border:2px}\n"
                                        "QPushButton{border-radius:10px}\n"
                                        "QPushButton{padding:2px 2px 2px 2px}\n"
                                        "QPushButton{word-wrap: break-word}")
        self.pushButton_2.setText("")
        op = QtWidgets.QGraphicsOpacityEffect()
        op.setOpacity(0.8)
        self.pushButton_2.setGraphicsEffect(op)
        icon2 = QtGui.QIcon()
        icon2.addPixmap(QtGui.QPixmap("./source/icons/chaxun.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.pushButton_2.setIcon(icon2)
        self.pushButton_2.setIconSize(QtCore.QSize(100, 100))
        self.pushButton_2.setDefault(False)
        self.pushButton_2.setObjectName("pushButton_2")
        self.verticalLayout.addWidget(self.pushButton_2)
        self.pushButton_3 = QtWidgets.QPushButton(self.centralwidget)
        self.pushButton_3.setMinimumSize(QtCore.QSize(100, 100))
        self.pushButton_3.setMaximumSize(QtCore.QSize(100, 100))
        self.pushButton_3.setStyleSheet("QPushButton{background-color:transparent}\n"
                                        "QPushButton{border:2px}\n"
                                        "QPushButton{border-radius:10px}\n"
                                        "QPushButton{padding:2px 2px 2px 2px}\n"
                                        "QPushButton{word-wrap: break-word}")
        self.pushButton_3.setText("")
        op = QtWidgets.QGraphicsOpacityEffect()
        op.setOpacity(0.8)
        self.pushButton_3.setGraphicsEffect(op)
        icon3 = QtGui.QIcon()
        icon3.addPixmap(QtGui.QPixmap("./source/icons/shibie.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.pushButton_3.setIcon(icon3)
        self.pushButton_3.setIconSize(QtCore.QSize(100, 100))
        self.pushButton_3.setObjectName("pushButton_3")
        self.verticalLayout.addWidget(self.pushButton_3)
        self.pushButton_4 = QtWidgets.QPushButton(self.centralwidget)
        self.pushButton_4.setMinimumSize(QtCore.QSize(100, 100))
        self.pushButton_4.setMaximumSize(QtCore.QSize(100, 100))
        self.pushButton_4.setStyleSheet("QPushButton{background-color:transparent}\n"
                                        "QPushButton{border:2px}\n"
                                        "QPushButton{border-radius:10px}\n"
                                        "QPushButton{padding:2px 2px 2px 2px}\n"
                                        "QPushButton{word-wrap: break-word}")
        self.pushButton_4.setText("")
        op = QtWidgets.QGraphicsOpacityEffect()
        op.setOpacity(0.8)
        self.pushButton_4.setGraphicsEffect(op)
        icon4 = QtGui.QIcon()
        icon4.addPixmap(QtGui.QPixmap("./source/icons/guanli.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.pushButton_4.setIcon(icon4)
        self.pushButton_4.setIconSize(QtCore.QSize(100, 100))
        self.pushButton_4.setObjectName("pushButton_4")
        self.verticalLayout.addWidget(self.pushButton_4)
        self.pushButton_5 = QtWidgets.QPushButton(self.centralwidget)
        self.pushButton_5.setMinimumSize(QtCore.QSize(100, 100))
        self.pushButton_5.setMaximumSize(QtCore.QSize(100, 100))
        self.pushButton_5.setStyleSheet("QPushButton{background-color:transparent}\n"
                                        "QPushButton{border:2px}\n"
                                        "QPushButton{border-radius:10px}\n"
                                        "QPushButton{padding:2px 2px 2px 2px}\n"
                                        "QPushButton{word-wrap: break-word}")
        self.pushButton_5.setText("")
        op = QtWidgets.QGraphicsOpacityEffect()
        op.setOpacity(0.8)
        self.pushButton_5.setGraphicsEffect(op)
        icon4 = QtGui.QIcon()
        icon4.addPixmap(QtGui.QPixmap("./source/icons/gengduo.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.pushButton_5.setIcon(icon4)
        self.pushButton_5.setIconSize(QtCore.QSize(100, 100))
        self.pushButton_5.setObjectName("pushButton_5")
        self.verticalLayout.addWidget(self.pushButton_5)
        spacerItem = QtWidgets.QSpacerItem(20, 40, QtWidgets.QSizePolicy.Minimum, QtWidgets.QSizePolicy.Expanding)
        self.verticalLayout.addItem(spacerItem)
        self.horizontalLayout_2.addLayout(self.verticalLayout)
        self.widget = QtWidgets.QWidget(self.centralwidget)
        self.widget.setObjectName("widget")
        self.horizontalLayout_2.addWidget(self.widget)
        self.widget_2 = QtWidgets.QWidget(self.centralwidget)
        self.widget_2.setObjectName("widget_2")
        self.horizontalLayout_2.addWidget(self.widget_2)
        self.widget_3 = QtWidgets.QWidget(self.centralwidget)
        self.widget_3.setObjectName("widget_3")
        self.horizontalLayout_2.addWidget(self.widget_3)
        self.widget_4 = QtWidgets.QWidget(self.centralwidget)
        self.widget_4.setObjectName("widget_4")
        self.horizontalLayout_2.addWidget(self.widget_4)
        self.widget_5 = QtWidgets.QWidget(self.centralwidget)
        self.widget_5.setObjectName("widget_5")
        self.widget.setStyleSheet("QWidget{background-color:white}")
        self.widget_2.setStyleSheet("QWidget{background-color:white}")
        self.widget_3.setStyleSheet("QWidget{background-color:white}")
        self.widget_4.setStyleSheet("QWidget{background-color:white}")
        self.widget_5.setStyleSheet("QWidget{background-color:white}")
        self.horizontalLayout_7 = QtWidgets.QHBoxLayout(self.widget_5)
        self.horizontalLayout_7.setObjectName("horizontalLayout_7")
        self.verticalLayout_11 = QtWidgets.QVBoxLayout()
        self.verticalLayout_11.setObjectName("verticalLayout_11")
        self.horizontalLayout_3 = QtWidgets.QHBoxLayout()
        self.horizontalLayout_3.setObjectName("horizontalLayout_3")
        self.xray_widget = QtWidgets.QWidget(self.widget_5)
        self.xray_widget.setObjectName("xray_widget")
        self.verticalLayout_3 = QtWidgets.QVBoxLayout(self.xray_widget)
        self.verticalLayout_3.setObjectName("verticalLayout_3")
        self.label_2 = QtWidgets.QLabel(self.xray_widget)
        self.label_2.setAlignment(QtCore.Qt.AlignCenter)
        self.label_2.setObjectName("label_2")
        self.verticalLayout_3.addWidget(self.label_2)
        self.label = QtWidgets.QLabel(self.xray_widget)
        self.label.setMinimumSize(QtCore.QSize(400, 350))
        self.label.setText("")
        self.label.setObjectName("label")
        self.verticalLayout_3.addWidget(self.label)
        self.horizontalLayout_3.addWidget(self.xray_widget)
        self.raman_widget = QtWidgets.QWidget(self.widget_5)
        self.raman_widget.setObjectName("raman_widget")
        self.verticalLayout_7 = QtWidgets.QVBoxLayout(self.raman_widget)
        self.verticalLayout_7.setObjectName("verticalLayout_7")
        self.label_3 = QtWidgets.QLabel(self.raman_widget)
        self.label_3.setEnabled(True)
        self.label_3.setAlignment(QtCore.Qt.AlignCenter)
        self.label_3.setObjectName("label_3")
        self.verticalLayout_7.addWidget(self.label_3)
        self.label_4 = QtWidgets.QLabel(self.raman_widget)
        self.label_4.setMinimumSize(QtCore.QSize(400, 350))
        self.label_4.setText("")
        self.label_4.setObjectName("label_4")
        self.verticalLayout_7.addWidget(self.label_4)
        self.horizontalLayout_3.addWidget(self.raman_widget)
        self.verticalLayout_11.addLayout(self.horizontalLayout_3)
        self.metal_widget = QtWidgets.QWidget(self.widget_5)
        self.metal_widget.setObjectName("metal_widget")
        self.horizontalLayout_4 = QtWidgets.QHBoxLayout(self.metal_widget)
        self.horizontalLayout_4.setObjectName("horizontalLayout_4")
        self.gridLayout = QtWidgets.QGridLayout()
        self.gridLayout.setObjectName("gridLayout")
        self.label_5 = QtWidgets.QLabel(self.metal_widget)
        self.label_5.setMinimumSize(QtCore.QSize(0, 60))
        self.label_5.setMaximumSize(QtCore.QSize(200, 100))
        self.label_5.setAlignment(QtCore.Qt.AlignCenter)
        self.label_5.setObjectName("label_5")
        self.gridLayout.addWidget(self.label_5, 1, 1, 1, 1)
        self.textBrowser_2 = QtWidgets.QTextBrowser(self.metal_widget)
        self.textBrowser_2.setMaximumSize(QtCore.QSize(200, 50))
        self.textBrowser_2.setObjectName("textBrowser_2")
        self.gridLayout.addWidget(self.textBrowser_2, 2, 2, 1, 1)
        self.label_7 = QtWidgets.QLabel(self.metal_widget)
        self.label_7.setAlignment(QtCore.Qt.AlignCenter)
        self.label_7.setObjectName("label_7")
        self.gridLayout.addWidget(self.label_7, 0, 1, 1, 2)
        self.textBrowser = QtWidgets.QTextBrowser(self.metal_widget)
        self.textBrowser.setMaximumSize(QtCore.QSize(200, 50))
        self.textBrowser.setObjectName("textBrowser")
        self.gridLayout.addWidget(self.textBrowser, 1, 2, 1, 1)
        self.label_6 = QtWidgets.QLabel(self.metal_widget)
        self.label_6.setMinimumSize(QtCore.QSize(0, 60))
        self.label_6.setMaximumSize(QtCore.QSize(200, 100))
        self.label_6.setAlignment(QtCore.Qt.AlignCenter)
        self.label_6.setObjectName("label_6")
        self.gridLayout.addWidget(self.label_6, 2, 1, 1, 1)
        spacerItem = QtWidgets.QSpacerItem(40, 20, QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Minimum)
        self.gridLayout.addItem(spacerItem, 1, 0, 1, 1)
        spacerItem1 = QtWidgets.QSpacerItem(40, 20, QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Minimum)
        self.gridLayout.addItem(spacerItem1, 2, 0, 1, 1)
        spacerItem2 = QtWidgets.QSpacerItem(40, 20, QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Minimum)
        self.gridLayout.addItem(spacerItem2, 1, 3, 1, 1)
        spacerItem3 = QtWidgets.QSpacerItem(40, 20, QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Minimum)
        self.gridLayout.addItem(spacerItem3, 2, 3, 1, 1)
        self.horizontalLayout_4.addLayout(self.gridLayout)
        self.verticalLayout_11.addWidget(self.metal_widget)
        self.horizontalLayout_7.addLayout(self.verticalLayout_11)
        self.groupBox = QtWidgets.QGroupBox(self.widget_5)
        self.groupBox.setMinimumSize(QtCore.QSize(200, 0))
        self.groupBox.setObjectName("groupBox")
        self.horizontalLayout_7.addWidget(self.groupBox)
        self.horizontalLayout_2.addWidget(self.widget_5)
        mainWindow.setCentralWidget(self.centralwidget)
        self.statusbar = QtWidgets.QStatusBar(mainWindow)
        self.statusbar.setObjectName("statusbar")
        mainWindow.setStatusBar(self.statusbar)
        self.toolBar = QtWidgets.QToolBar(mainWindow)
        self.toolBar.setObjectName("toolBar")
        mainWindow.addToolBar(QtCore.Qt.TopToolBarArea, self.toolBar)
        self.toolBar_2 = QtWidgets.QToolBar(mainWindow)
        self.toolBar_2.setObjectName("toolBar_2")
        mainWindow.addToolBar(QtCore.Qt.TopToolBarArea, self.toolBar_2)
        self.menuItem_new = QtWidgets.QAction(mainWindow)
        self.menuItem_new.setCheckable(True)
        icon5 = QtGui.QIcon()
        icon5.addPixmap(QtGui.QPixmap("./source/icon/baogao.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.menuItem_new.setIcon(icon5)
        self.menuItem_new.setObjectName("menuItem_new")
        self.menuItem_openFile = QtWidgets.QAction(mainWindow)
        icon6 = QtGui.QIcon()
        icon6.addPixmap(QtGui.QPixmap("./source/icon/icon.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.menuItem_openFile.setIcon(icon6)
        self.menuItem_openFile.setObjectName("menuItem_openFile")
        self.menuItem_saveFile = QtWidgets.QAction(mainWindow)
        icon7 = QtGui.QIcon()
        icon7.addPixmap(QtGui.QPixmap("./source/icon/save.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.menuItem_saveFile.setIcon(icon7)
        self.menuItem_saveFile.setObjectName("menuItem_saveFile")
        self.menuItem_quitSystem = QtWidgets.QAction(mainWindow)
        icon8 = QtGui.QIcon()
        icon8.addPixmap(QtGui.QPixmap("./source/icon/decentralized-02.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.menuItem_quitSystem.setIcon(icon8)
        self.menuItem_quitSystem.setObjectName("menuItem_quitSystem")
        self.munuItem_markbook = QtWidgets.QAction(mainWindow)
        self.munuItem_markbook.setObjectName("munuItem_markbook")
        self.munuItem_controlNet = QtWidgets.QAction(mainWindow)
        self.munuItem_controlNet.setObjectName("munuItem_controlNet")
        self.munuItem_railwayCurve = QtWidgets.QAction(mainWindow)
        self.munuItem_railwayCurve.setEnabled(True)
        self.munuItem_railwayCurve.setObjectName("munuItem_railwayCurve")
        self.munuItem_CPIII = QtWidgets.QAction(mainWindow)
        self.munuItem_CPIII.setEnabled(False)
        self.munuItem_CPIII.setObjectName("munuItem_CPIII")
        self.munuItem_GNSSNet = QtWidgets.QAction(mainWindow)
        self.munuItem_GNSSNet.setCheckable(False)
        self.munuItem_GNSSNet.setEnabled(False)
        self.munuItem_GNSSNet.setObjectName("munuItem_GNSSNet")
        self.munuItem_cacuPara = QtWidgets.QAction(mainWindow)
        icon9 = QtGui.QIcon()
        icon9.addPixmap(QtGui.QPixmap("./source/icon/designer-tools.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.munuItem_cacuPara.setIcon(icon9)
        self.munuItem_cacuPara.setObjectName("munuItem_cacuPara")
        self.munuItem_connect = QtWidgets.QAction(mainWindow)
        icon10 = QtGui.QIcon()
        icon10.addPixmap(QtGui.QPixmap("./source/icon/lineOneline.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.munuItem_connect.setIcon(icon10)
        self.munuItem_connect.setObjectName("munuItem_systemPara")
        self.munuItem_windowSet = QtWidgets.QAction(mainWindow)
        icon11 = QtGui.QIcon()
        icon11.addPixmap(QtGui.QPixmap("./source/icon/calender.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.munuItem_windowSet.setIcon(icon11)
        self.munuItem_windowSet.setObjectName("munuItem_windowSet")
        self.munuItem_systemPara = QtWidgets.QAction(mainWindow)
        icon12 = QtGui.QIcon()
        icon12.addPixmap(QtGui.QPixmap("./source/icon/set.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.munuItem_systemPara.setIcon(icon12)
        self.munuItem_systemPara.setObjectName("munuItem_systemPara")
        self.munuItem_localHelp = QtWidgets.QAction(mainWindow)
        icon13 = QtGui.QIcon()
        icon13.addPixmap(QtGui.QPixmap("./source/icon/line.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.munuItem_localHelp.setIcon(icon13)
        self.munuItem_localHelp.setObjectName("munuItem_localHelp")
        self.menuItem_resultReport = QtWidgets.QAction(mainWindow)
        icon14 = QtGui.QIcon()
        icon14.addPixmap(QtGui.QPixmap("./source/icon/zaogao.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.menuItem_resultReport.setIcon(icon14)
        self.menuItem_resultReport.setObjectName("menuItem_resultReport")
        self.munuItem_version = QtWidgets.QAction(mainWindow)
        icon15 = QtGui.QIcon()
        icon15.addPixmap(QtGui.QPixmap("./source/icon/note.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.munuItem_version.setIcon(icon15)
        self.munuItem_version.setObjectName("munuItem_version")
        self.menuItem_backWelcome = QtWidgets.QAction(mainWindow)
        icon16 = QtGui.QIcon()
        icon16.addPixmap(QtGui.QPixmap("./source/icon/resu.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.menuItem_backWelcome.setIcon(icon16)
        self.menuItem_backWelcome.setObjectName("menuItem_backWelcome")
        self.munuItem_statusBar = QtWidgets.QAction(mainWindow)
        self.munuItem_statusBar.setCheckable(True)
        icon17 = QtGui.QIcon()
        icon17.addPixmap(QtGui.QPixmap("./source/icon/mes.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.munuItem_statusBar.setIcon(icon17)
        self.munuItem_statusBar.setObjectName("munuItem_statusBar")
        self.munuItem_fileStatusBar = QtWidgets.QAction(mainWindow)
        self.munuItem_fileStatusBar.setCheckable(True)
        icon18 = QtGui.QIcon()
        icon18.addPixmap(QtGui.QPixmap("./source/icon/tree.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.munuItem_fileStatusBar.setIcon(icon18)
        self.munuItem_fileStatusBar.setObjectName("munuItem_fileStatusBar")
        self.munuItem_license = QtWidgets.QAction(mainWindow)
        icon19 = QtGui.QIcon()
        icon19.addPixmap(QtGui.QPixmap("./source/icon/icon_any.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.munuItem_license.setIcon(icon19)
        self.munuItem_license.setObjectName("munuItem_license")
        self.munuItem_stablePointGround = QtWidgets.QAction(mainWindow)
        self.munuItem_stablePointGround.setObjectName("munuItem_stablePointGround")
        self.munuItem_satellite = QtWidgets.QAction(mainWindow)
        self.munuItem_satellite.setObjectName("munuItem_satellite")
        self.munuItem_coorSystemTran = QtWidgets.QAction(mainWindow)
        self.munuItem_coorSystemTran.setObjectName("munuItem_coorSystemTran")
        self.munuItem_coorTran = QtWidgets.QAction(mainWindow)
        self.munuItem_coorTran.setObjectName("munuItem_coorTran")
        self.munuItem_GussianTran = QtWidgets.QAction(mainWindow)
        self.munuItem_GussianTran.setEnabled(False)
        self.munuItem_GussianTran.setObjectName("munuItem_GussianTran")
        self.munuItem_contact = QtWidgets.QAction(mainWindow)
        icon20 = QtGui.QIcon()
        icon20.addPixmap(QtGui.QPixmap("./source/icon/chat.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.munuItem_contact.setIcon(icon20)
        self.munuItem_contact.setObjectName("munuItem_contact")
        self.menuItem_SPP = QtWidgets.QAction(mainWindow)
        self.menuItem_SPP.setObjectName("menuItem_SPP")
        self.actionPPP_P = QtWidgets.QAction(mainWindow)
        self.actionPPP_P.setObjectName("actionPPP_P")
        self.action_G = QtWidgets.QAction(mainWindow)
        self.action_G.setObjectName("action_G")
        self.actionGNSS_L = QtWidgets.QAction(mainWindow)
        self.actionGNSS_L.setObjectName("actionGNSS_L")
        self.actionw = QtWidgets.QAction(mainWindow)
        self.actionw.setEnabled(False)
        self.actionw.setObjectName("actionw")
        self.actionsd = QtWidgets.QAction(mainWindow)
        self.actionsd.setEnabled(False)
        self.actionsd.setObjectName("actionsd")
        self.actionsd_2 = QtWidgets.QAction(mainWindow)
        self.actionsd_2.setObjectName("actionsd_2")
        self.actions = QtWidgets.QAction(mainWindow)
        self.actions.setObjectName("actions")
        # self.toolBar.addAction(self.menuItem_new)
        # self.toolBar.addSeparator()
        self.toolBar.addAction(self.menuItem_openFile)
        self.toolBar.addSeparator()
        self.toolBar.addAction(self.menuItem_saveFile)
        self.toolBar.addSeparator()
        self.toolBar.addAction(self.munuItem_windowSet)
        self.toolBar.addSeparator()
        self.toolBar.addAction(self.menuItem_resultReport)
        self.toolBar.addSeparator()
        self.toolBar_2.addAction(self.munuItem_connect)
        self.toolBar_2.addAction(self.munuItem_statusBar)
        self.toolBar_2.addAction(self.munuItem_fileStatusBar)
        self.toolBar_2.addAction(self.munuItem_localHelp)
        self.toolBar_2.addAction(self.munuItem_systemPara)
        self.toolBar_2.addSeparator()
        self.toolBar_2.addAction(self.munuItem_contact)

        self.xrayDetectionWidget_ui = xrayDetectionWidget.Ui_Form()
        self.xrayDetectionWidget_ui.infoEmit.connect(self.showInfo)
        self.xrayDetectionWidget_ui.setupUi(self.widget)
        self.searchDataWidget_ui = searchDataWidget.Ui_Form()
        self.searchDataWidget_ui.setupUi(self.widget_2)
        self.imagesDetectionWidget_ui = imagesDetectionWidget.Ui_Form()
        self.imagesDetectionWidget_ui.infoEmit.connect(self.showInfo)
        self.imagesDetectionWidget_ui.setupUi(self.widget_3)
        self.userManageWidget_ui = userManageWidget.Ui_Form()
        self.userManageWidget_ui.setupUi(self.widget_4)

        self.pushButton.clicked.connect(self.switchDetection)
        self.pushButton_2.clicked.connect(self.switchSearch)
        self.pushButton_3.clicked.connect(self.switchBrowse)
        self.pushButton_4.clicked.connect(self.switchUser)
        self.pushButton_5.clicked.connect(self.switchMore)

        self.switchDetection()

        self.menuItem_openFile.triggered.connect(self.OpenFile)
        self.munuItem_windowSet.triggered.connect(self.WindowSet)
        self.menuItem_resultReport.triggered.connect(self.ResultReport)
        self.munuItem_connect.triggered.connect(self.waitDialog)

        # self.pushButton.clicked.connect(self.setXrayHidden)
        # self.pushButton_2.clicked.connect(self.setRamanHidden)
        # self.pushButton_3.clicked.connect(self.setMetalHidden)



        self.retranslateUi(mainWindow)
        QtCore.QMetaObject.connectSlotsByName(mainWindow)

    def retranslateUi(self, mainWindow):
        _translate = QtCore.QCoreApplication.translate
        mainWindow.setWindowTitle(_translate("mainWindow", "安全检测系统"))
        self.label_2.setText(_translate("mainWindow", "X光图像"))
        self.label_3.setText(_translate("mainWindow", "拉曼"))
        self.label_5.setText(_translate("mainWindow", "参数1"))
        self.label_7.setText(_translate("mainWindow", "金属探测"))
        self.label_6.setText(_translate("mainWindow", "参数2"))
        self.groupBox.setTitle(_translate("mainWindow", "结果分析"))
        self.toolBar.setWindowTitle(_translate("mainWindow", "toolBar"))
        self.toolBar_2.setWindowTitle(_translate("mainWindow", "toolBar_2"))
        self.menuItem_new.setText(_translate("mainWindow", "新建(&N)"))
        self.menuItem_openFile.setText(_translate("mainWindow", "打开文件(&O)"))
        self.menuItem_saveFile.setText(_translate("mainWindow", "保存文件(&S)"))
        self.munuItem_windowSet.setText(_translate("mainWindow", "界面设置(&W)"))
        self.menuItem_resultReport.setText(_translate("mainWindow", "导出报告(&O)"))
        self.munuItem_systemPara.setText(_translate("mainWindow", "系统参数(&S)"))
        self.munuItem_statusBar.setText(_translate("mainWindow", "状态信息栏(&S) "))
        self.munuItem_fileStatusBar.setText(_translate("mainWindow", "文件列表栏(&F)"))
        self.munuItem_localHelp.setText(_translate("mainWindow", "本地文档(&I)"))
        self.munuItem_connect.setText(_translate("mainWindow", "链接设备(&I)"))
        self.munuItem_contact.setText(_translate("mainWindow", "联系方式(&L)"))

    def _infoEmitEvent(self, type, infoStr):
        """
        顶层信号槽函数
        :param type: I-信息
        :param infoStr:
        :return:
        """
        self.infoEmit.emit(type, infoStr)
        if type == "T":
            self.transform(infoStr)
        elif type == "L":
            # db = MySQLdb.connect(host='localhost', user='root', password='991010', db='test')
            # cur = db.cursor()
            # sql = '''select * from users where user_name = '%s' ''' % (infoStr)
            # cur.execute(sql)
            # userinfor = cur.fetchall()
            # db.close()
            # self.user = userinfor[0][2]
            self.label_hello.setText("欢迎您")

    """
    点击按钮切换界面
    """
    def switchDetection(self):
        self.setButton(0)
        self.widget_2.setHidden(True)
        self.widget_3.setHidden(True)
        self.widget_4.setHidden(True)
        self.widget_5.setHidden(True)
        self.widget.setHidden(False)
        self.button_num = 0

    def switchSearch(self):
        self.setButton(1)
        self.widget.setHidden(True)
        self.widget_3.setHidden(True)
        self.widget_4.setHidden(True)
        self.widget_5.setHidden(True)
        self.widget_2.setHidden(False)
        self.button_num = 1
        self.searchDataWidget_ui.getData()

    def switchBrowse(self):
        self.setButton(2)
        self.widget.setHidden(True)
        self.widget_2.setHidden(True)
        self.widget_4.setHidden(True)
        self.widget_5.setHidden(True)
        self.widget_3.setHidden(False)
        self.button_num = 2

    def switchUser(self):
        self.setButton(3)
        self.widget.setHidden(True)
        self.widget_2.setHidden(True)
        self.widget_3.setHidden(True)
        self.widget_5.setHidden(True)
        self.widget_4.setHidden(False)
        self.button_num = 3

    def switchMore(self):
        self.setButton(4)
        self.widget.setHidden(True)
        self.widget_2.setHidden(True)
        self.widget_3.setHidden(True)
        self.widget_4.setHidden(True)
        self.widget_5.setHidden(False)
        self.button_num = 4

    def setButton(self, index):
        buttons = [self.pushButton, self.pushButton_2, self.pushButton_3, self.pushButton_4, self.pushButton_5]
        for i in range(5):
            if i == index:
                buttons[i].setStyleSheet("QPushButton{background-color:#%s}\n" 
                                        "QPushButton{border-radius:10px}" % self.button_color)
            else:
                buttons[i].setStyleSheet("QPushButton{background:transparent}")

    def WindowSet(self):
        self.Dialog = settingDialog.setDialog(self.style_color)
        self.Dialog.infoEmit.connect(self._infoEmitEvent)
        self.Dialog.show()

    def transform(self, style):
        mainwindow = self.centralwidget.parent()
        if style == '1':
            self.style_color = 1
            mainwindow.setStyleSheet("QMainWindow{background-color:#CCDDFF}")
            self.button_color = "99BBFF"
            if self.deep:
                self.label_hello.setStyleSheet("QLabel{color:rgb(0,0,0)}")
                icon1 = QtGui.QIcon()
                icon1.addPixmap(QtGui.QPixmap("./source/icons/jiance_black.png"), QtGui.QIcon.Normal, QtGui.QIcon.On)
                self.pushButton.setIcon(icon1)
                self.pushButton.setIconSize(QtCore.QSize(100, 100))
                icon2 = QtGui.QIcon()
                icon2.addPixmap(QtGui.QPixmap("./source/icons/chaxun_black.png"), QtGui.QIcon.Normal, QtGui.QIcon.On)
                self.pushButton_2.setIcon(icon2)
                self.pushButton_2.setIconSize(QtCore.QSize(100, 100))
                icon3 = QtGui.QIcon()
                icon3.addPixmap(QtGui.QPixmap("./source/icons/shibie_black.png"), QtGui.QIcon.Normal, QtGui.QIcon.On)
                self.pushButton_3.setIcon(icon3)
                self.pushButton_3.setIconSize(QtCore.QSize(100, 100))
                icon4 = QtGui.QIcon()
                icon4.addPixmap(QtGui.QPixmap("./source/icons/guanli_black.png"), QtGui.QIcon.Normal, QtGui.QIcon.On)
                self.pushButton_4.setIcon(icon4)
                self.pushButton_4.setIconSize(QtCore.QSize(100, 100))
                icon5 = QtGui.QIcon()
                icon5.addPixmap(QtGui.QPixmap("./source/icons/gengduo_black.png"), QtGui.QIcon.Normal, QtGui.QIcon.On)
                self.pushButton_5.setIcon(icon5)
                self.pushButton_5.setIconSize(QtCore.QSize(100, 100))
                self.deep = False
        else:
            if style == '0':
                self.style_color = 0
                mainwindow.setStyleSheet("QMainWindow{background-color:#006699}")
                self.button_color = "1E90EE"
            else:
                self.style_color = 2
                mainwindow.setStyleSheet("QMainWindow{background-color:#777777}")
                self.button_color = "AAAAAA"
            if not self.deep:
                self.label_hello.setStyleSheet("QLabel{color:rgb(255,255,255)}")
                icon1 = QtGui.QIcon()
                icon1.addPixmap(QtGui.QPixmap("./source/icons/jiance.png"), QtGui.QIcon.Normal, QtGui.QIcon.On)
                self.pushButton.setIcon(icon1)
                self.pushButton.setIconSize(QtCore.QSize(100, 100))
                icon2 = QtGui.QIcon()
                icon2.addPixmap(QtGui.QPixmap("./source/icons/chaxun.png"), QtGui.QIcon.Normal, QtGui.QIcon.On)
                self.pushButton_2.setIcon(icon2)
                self.pushButton_2.setIconSize(QtCore.QSize(100, 100))
                icon3 = QtGui.QIcon()
                icon3.addPixmap(QtGui.QPixmap("./source/icons/shibie.png"), QtGui.QIcon.Normal, QtGui.QIcon.On)
                self.pushButton_3.setIcon(icon3)
                self.pushButton_3.setIconSize(QtCore.QSize(100, 100))
                icon4 = QtGui.QIcon()
                icon4.addPixmap(QtGui.QPixmap("./source/icons/guanli.png"), QtGui.QIcon.Normal, QtGui.QIcon.On)
                self.pushButton_4.setIcon(icon4)
                self.pushButton_4.setIconSize(QtCore.QSize(100, 100))
                icon5 = QtGui.QIcon()
                icon5.addPixmap(QtGui.QPixmap("./source/icons/gengduo.png"), QtGui.QIcon.Normal, QtGui.QIcon.On)
                self.pushButton_5.setIcon(icon5)
                self.pushButton_5.setIconSize(QtCore.QSize(100, 100))
                self.deep = True
        if self.button_num == 0:
            self.switchDetection()
        elif self.button_num == 1:
            self.switchSearch()
        elif self.button_num == 2:
            self.switchBrowse()
        elif self.button_num == 3:
            self.switchUser()
        elif self.button_num == 4:
            self.switchMore()

    """
    打开文件夹
    """
    def OpenFile(self):
        start_directory = r'.\VOCdevkit\VOC2007\JPEGImages'
        os.startfile(start_directory)

    """
    打印报告单
    """
    def ResultReport(self):
        db = MySQLdb.connect(host='localhost', user='root', password='991010', db='test')
        cur = db.cursor()

        time = QtCore.QDate.currentDate()
        y, m, d = time.year(), time.month(), time.day()
        sql = '''select * from check_data where year(check_time) = %s and month(check_time) = %s and day(check_time) = %s''' % (
        y, m, d)
        cur.execute(sql)
        data = cur.fetchall()
        db.close()
        path, type = QtWidgets.QFileDialog.getSaveFileName(self.parent(), "保存文件", "安全检测报告单.docx",
                                                               "DOCX(*DOCX);;All Files (*)")
        if not path:
            self.showInfo("I","已取消导出报告单")
            return
        date = str(y) + "/" + str(m) + "/" + str(d)
        print(path, type)
        docxCreate.docxCreate(data, path, type, date, self.user)

    def messageDialog(self, strInfo):
        # 显示提示框
        icon = QtGui.QIcon()
        icon.addPixmap(QtGui.QPixmap("./source/icon/comment.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        msg_box = QtWidgets.QMessageBox(QtWidgets.QMessageBox.Warning, '警告', strInfo)
        msg_box.setWindowIcon(icon)
        msg_box.exec_()

    def waitDialog(self):
        if self.xrayDetectionWidget_ui.isConnected:
            self.messageDialog("已链接到设备！")
            return
        # 显示提示框
        icon = QtGui.QIcon()
        icon.addPixmap(QtGui.QPixmap("./source/icon/comment.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        progress = QtWidgets.QProgressDialog()
        progress.setMaximumHeight(100)
        progress.setWindowTitle("等待链接中...")
        progress.setCancelButtonText("取消")
        progress.setWindowIcon(icon)
        progress.setWindowModality(QtCore.Qt.WindowModal)
        progress.show()
        t = threading.Thread(target=self.xrayDetectionWidget_ui.tcpConnect)
        t.start()
        t.join()


    def showInfo(self, type, strInfo):
        """
        集成信息显示中心
        :param type: 需要指向的显示类型
        :param strInfo: 需要显示的信息
        :return:
        """
        if type == "I":  # 状态信息栏
            # self.textEdit_status.append(strInfo)
            self.messageDialog(strInfo)

